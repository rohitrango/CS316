Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> VOID MAIN LPAREN RPAREN LCURL body RCURL
Rule 2     prog -> VOID MAIN LPAREN RPAREN LCURL RCURL
Rule 3     body -> body stmt
Rule 4     body -> stmt
Rule 5     stmt -> decl SEMICOLON
Rule 6     stmt -> assgn SEMICOLON
Rule 7     stmt -> if_stmt
Rule 8     stmt -> while_stmt
Rule 9     if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt
Rule 10    if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt
Rule 11    while_stmt -> WHILE LPAREN bool_expr RPAREN compound_stmt
Rule 12    compound_stmt -> stmt
Rule 13    compound_stmt -> SEMICOLON
Rule 14    compound_stmt -> LCURL RCURL
Rule 15    compound_stmt -> LCURL body RCURL
Rule 16    assgn -> ptr_assgn
Rule 17    assgn -> num_assgn
Rule 18    decl -> INT decl_list
Rule 19    decl_list -> decl_list COMMA ID
Rule 20    decl_list -> decl_list COMMA ptr
Rule 21    decl_list -> ID
Rule 22    decl_list -> ptr
Rule 23    ptr_assgn -> ptr EQUALS ptr_expr
Rule 24    num_assgn -> ID EQUALS ptr_expr
Rule 25    bool_expr -> bool_expr OR OR a_bool_expr
Rule 26    bool_expr -> a_bool_expr
Rule 27    a_bool_expr -> a_bool_expr AND AND n_bool_expr
Rule 28    a_bool_expr -> n_bool_expr
Rule 29    n_bool_expr -> NOT n_bool_expr
Rule 30    n_bool_expr -> sub_bool_expr
Rule 31    sub_bool_expr -> ptr_expr GT ptr_expr
Rule 32    sub_bool_expr -> ptr_expr GT EQUALS ptr_expr
Rule 33    sub_bool_expr -> ptr_expr LT ptr_expr
Rule 34    sub_bool_expr -> ptr_expr LT EQUALS ptr_expr
Rule 35    sub_bool_expr -> ptr_expr EQUALS EQUALS ptr_expr
Rule 36    sub_bool_expr -> ptr_expr NOT EQUALS ptr_expr
Rule 37    ptr_expr -> ptr_expr PLUS ptr_factor
Rule 38    ptr_expr -> ptr_expr MINUS ptr_factor
Rule 39    ptr_expr -> ptr_factor
Rule 40    ptr_factor -> ptr_factor STAR ptr_term
Rule 41    ptr_factor -> ptr_factor SLASH ptr_term
Rule 42    ptr_factor -> ptr_term
Rule 43    ptr_term -> MINUS ptr_term
Rule 44    ptr_term -> ptr_expr_base
Rule 45    ptr_expr_base -> ID
Rule 46    ptr_expr_base -> NUM
Rule 47    ptr_expr_base -> ptr
Rule 48    ptr_expr_base -> addr
Rule 49    ptr_expr_base -> LPAREN ptr_expr RPAREN
Rule 50    ptr -> STAR ptr
Rule 51    ptr -> STAR ID
Rule 52    ptr -> STAR addr
Rule 53    addr -> AND ID
Rule 54    addr -> AND ptr
Rule 55    addr -> AND addr

Terminals, with rules where they appear

AND                  : 27 27 53 54 55
COMMA                : 19 20
ELSE                 : 10
EQUALS               : 23 24 32 34 35 35 36
GT                   : 31 32
ID                   : 19 21 24 45 51 53
IF                   : 9 10
INT                  : 18
LCURL                : 1 2 14 15
LPAREN               : 1 2 9 10 11 49
LT                   : 33 34
MAIN                 : 1 2
MINUS                : 38 43
NOT                  : 29 36
NUM                  : 46
OR                   : 25 25
PLUS                 : 37
RCURL                : 1 2 14 15
RPAREN               : 1 2 9 10 11 49
SEMICOLON            : 5 6 13
SLASH                : 41
STAR                 : 40 50 51 52
VOID                 : 1 2
WHILE                : 11
error                : 

Nonterminals, with rules where they appear

a_bool_expr          : 25 26 27
addr                 : 48 52 55
assgn                : 6
body                 : 1 3 15
bool_expr            : 9 10 11 25
compound_stmt        : 9 10 10 11
decl                 : 5
decl_list            : 18 19 20
if_stmt              : 7
n_bool_expr          : 27 28 29
num_assgn            : 17
prog                 : 0
ptr                  : 20 22 23 47 50 54
ptr_assgn            : 16
ptr_expr             : 23 24 31 31 32 32 33 33 34 34 35 35 36 36 37 38 49
ptr_expr_base        : 44
ptr_factor           : 37 38 39 40 41
ptr_term             : 40 41 42 43
stmt                 : 3 4 12
sub_bool_expr        : 30
while_stmt           : 8

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . VOID MAIN LPAREN RPAREN LCURL body RCURL
    (2) prog -> . VOID MAIN LPAREN RPAREN LCURL RCURL

    VOID            shift and go to state 1

    prog                           shift and go to state 2

state 1

    (1) prog -> VOID . MAIN LPAREN RPAREN LCURL body RCURL
    (2) prog -> VOID . MAIN LPAREN RPAREN LCURL RCURL

    MAIN            shift and go to state 3


state 2

    (0) S' -> prog .



state 3

    (1) prog -> VOID MAIN . LPAREN RPAREN LCURL body RCURL
    (2) prog -> VOID MAIN . LPAREN RPAREN LCURL RCURL

    LPAREN          shift and go to state 4


state 4

    (1) prog -> VOID MAIN LPAREN . RPAREN LCURL body RCURL
    (2) prog -> VOID MAIN LPAREN . RPAREN LCURL RCURL

    RPAREN          shift and go to state 5


state 5

    (1) prog -> VOID MAIN LPAREN RPAREN . LCURL body RCURL
    (2) prog -> VOID MAIN LPAREN RPAREN . LCURL RCURL

    LCURL           shift and go to state 6


state 6

    (1) prog -> VOID MAIN LPAREN RPAREN LCURL . body RCURL
    (2) prog -> VOID MAIN LPAREN RPAREN LCURL . RCURL
    (3) body -> . body stmt
    (4) body -> . stmt
    (5) stmt -> . decl SEMICOLON
    (6) stmt -> . assgn SEMICOLON
    (7) stmt -> . if_stmt
    (8) stmt -> . while_stmt
    (18) decl -> . INT decl_list
    (16) assgn -> . ptr_assgn
    (17) assgn -> . num_assgn
    (9) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt
    (10) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt
    (11) while_stmt -> . WHILE LPAREN bool_expr RPAREN compound_stmt
    (23) ptr_assgn -> . ptr EQUALS ptr_expr
    (24) num_assgn -> . ID EQUALS ptr_expr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr

    RCURL           shift and go to state 12
    INT             shift and go to state 19
    IF              shift and go to state 17
    WHILE           shift and go to state 9
    ID              shift and go to state 16
    STAR            shift and go to state 8

    body                           shift and go to state 13
    decl                           shift and go to state 7
    if_stmt                        shift and go to state 18
    assgn                          shift and go to state 11
    num_assgn                      shift and go to state 14
    ptr_assgn                      shift and go to state 20
    stmt                           shift and go to state 15
    ptr                            shift and go to state 10
    while_stmt                     shift and go to state 21

state 7

    (5) stmt -> decl . SEMICOLON

    SEMICOLON       shift and go to state 22


state 8

    (50) ptr -> STAR . ptr
    (51) ptr -> STAR . ID
    (52) ptr -> STAR . addr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    ID              shift and go to state 26
    STAR            shift and go to state 8
    AND             shift and go to state 23

    ptr                            shift and go to state 25
    addr                           shift and go to state 24

state 9

    (11) while_stmt -> WHILE . LPAREN bool_expr RPAREN compound_stmt

    LPAREN          shift and go to state 27


state 10

    (23) ptr_assgn -> ptr . EQUALS ptr_expr

    EQUALS          shift and go to state 28


state 11

    (6) stmt -> assgn . SEMICOLON

    SEMICOLON       shift and go to state 29


state 12

    (2) prog -> VOID MAIN LPAREN RPAREN LCURL RCURL .

    $end            reduce using rule 2 (prog -> VOID MAIN LPAREN RPAREN LCURL RCURL .)


state 13

    (1) prog -> VOID MAIN LPAREN RPAREN LCURL body . RCURL
    (3) body -> body . stmt
    (5) stmt -> . decl SEMICOLON
    (6) stmt -> . assgn SEMICOLON
    (7) stmt -> . if_stmt
    (8) stmt -> . while_stmt
    (18) decl -> . INT decl_list
    (16) assgn -> . ptr_assgn
    (17) assgn -> . num_assgn
    (9) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt
    (10) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt
    (11) while_stmt -> . WHILE LPAREN bool_expr RPAREN compound_stmt
    (23) ptr_assgn -> . ptr EQUALS ptr_expr
    (24) num_assgn -> . ID EQUALS ptr_expr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr

    RCURL           shift and go to state 30
    INT             shift and go to state 19
    IF              shift and go to state 17
    WHILE           shift and go to state 9
    ID              shift and go to state 16
    STAR            shift and go to state 8

    decl                           shift and go to state 7
    if_stmt                        shift and go to state 18
    assgn                          shift and go to state 11
    num_assgn                      shift and go to state 14
    ptr_assgn                      shift and go to state 20
    stmt                           shift and go to state 31
    ptr                            shift and go to state 10
    while_stmt                     shift and go to state 21

state 14

    (17) assgn -> num_assgn .

    SEMICOLON       reduce using rule 17 (assgn -> num_assgn .)


state 15

    (4) body -> stmt .

    RCURL           reduce using rule 4 (body -> stmt .)
    INT             reduce using rule 4 (body -> stmt .)
    IF              reduce using rule 4 (body -> stmt .)
    WHILE           reduce using rule 4 (body -> stmt .)
    ID              reduce using rule 4 (body -> stmt .)
    STAR            reduce using rule 4 (body -> stmt .)


state 16

    (24) num_assgn -> ID . EQUALS ptr_expr

    EQUALS          shift and go to state 32


state 17

    (9) if_stmt -> IF . LPAREN bool_expr RPAREN compound_stmt
    (10) if_stmt -> IF . LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt

    LPAREN          shift and go to state 33


state 18

    (7) stmt -> if_stmt .

    RCURL           reduce using rule 7 (stmt -> if_stmt .)
    INT             reduce using rule 7 (stmt -> if_stmt .)
    IF              reduce using rule 7 (stmt -> if_stmt .)
    WHILE           reduce using rule 7 (stmt -> if_stmt .)
    ID              reduce using rule 7 (stmt -> if_stmt .)
    STAR            reduce using rule 7 (stmt -> if_stmt .)
    ELSE            reduce using rule 7 (stmt -> if_stmt .)


state 19

    (18) decl -> INT . decl_list
    (19) decl_list -> . decl_list COMMA ID
    (20) decl_list -> . decl_list COMMA ptr
    (21) decl_list -> . ID
    (22) decl_list -> . ptr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr

    ID              shift and go to state 36
    STAR            shift and go to state 8

    ptr                            shift and go to state 35
    decl_list                      shift and go to state 34

state 20

    (16) assgn -> ptr_assgn .

    SEMICOLON       reduce using rule 16 (assgn -> ptr_assgn .)


state 21

    (8) stmt -> while_stmt .

    RCURL           reduce using rule 8 (stmt -> while_stmt .)
    INT             reduce using rule 8 (stmt -> while_stmt .)
    IF              reduce using rule 8 (stmt -> while_stmt .)
    WHILE           reduce using rule 8 (stmt -> while_stmt .)
    ID              reduce using rule 8 (stmt -> while_stmt .)
    STAR            reduce using rule 8 (stmt -> while_stmt .)
    ELSE            reduce using rule 8 (stmt -> while_stmt .)


state 22

    (5) stmt -> decl SEMICOLON .

    RCURL           reduce using rule 5 (stmt -> decl SEMICOLON .)
    INT             reduce using rule 5 (stmt -> decl SEMICOLON .)
    IF              reduce using rule 5 (stmt -> decl SEMICOLON .)
    WHILE           reduce using rule 5 (stmt -> decl SEMICOLON .)
    ID              reduce using rule 5 (stmt -> decl SEMICOLON .)
    STAR            reduce using rule 5 (stmt -> decl SEMICOLON .)
    ELSE            reduce using rule 5 (stmt -> decl SEMICOLON .)


state 23

    (53) addr -> AND . ID
    (54) addr -> AND . ptr
    (55) addr -> AND . addr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    ID              shift and go to state 38
    STAR            shift and go to state 8
    AND             shift and go to state 23

    ptr                            shift and go to state 39
    addr                           shift and go to state 37

state 24

    (52) ptr -> STAR addr .

    STAR            reduce using rule 52 (ptr -> STAR addr .)
    SLASH           reduce using rule 52 (ptr -> STAR addr .)
    GT              reduce using rule 52 (ptr -> STAR addr .)
    LT              reduce using rule 52 (ptr -> STAR addr .)
    EQUALS          reduce using rule 52 (ptr -> STAR addr .)
    NOT             reduce using rule 52 (ptr -> STAR addr .)
    PLUS            reduce using rule 52 (ptr -> STAR addr .)
    MINUS           reduce using rule 52 (ptr -> STAR addr .)
    SEMICOLON       reduce using rule 52 (ptr -> STAR addr .)
    RPAREN          reduce using rule 52 (ptr -> STAR addr .)
    AND             reduce using rule 52 (ptr -> STAR addr .)
    OR              reduce using rule 52 (ptr -> STAR addr .)
    COMMA           reduce using rule 52 (ptr -> STAR addr .)


state 25

    (50) ptr -> STAR ptr .

    STAR            reduce using rule 50 (ptr -> STAR ptr .)
    SLASH           reduce using rule 50 (ptr -> STAR ptr .)
    GT              reduce using rule 50 (ptr -> STAR ptr .)
    LT              reduce using rule 50 (ptr -> STAR ptr .)
    EQUALS          reduce using rule 50 (ptr -> STAR ptr .)
    NOT             reduce using rule 50 (ptr -> STAR ptr .)
    PLUS            reduce using rule 50 (ptr -> STAR ptr .)
    MINUS           reduce using rule 50 (ptr -> STAR ptr .)
    SEMICOLON       reduce using rule 50 (ptr -> STAR ptr .)
    RPAREN          reduce using rule 50 (ptr -> STAR ptr .)
    AND             reduce using rule 50 (ptr -> STAR ptr .)
    OR              reduce using rule 50 (ptr -> STAR ptr .)
    COMMA           reduce using rule 50 (ptr -> STAR ptr .)


state 26

    (51) ptr -> STAR ID .

    STAR            reduce using rule 51 (ptr -> STAR ID .)
    SLASH           reduce using rule 51 (ptr -> STAR ID .)
    GT              reduce using rule 51 (ptr -> STAR ID .)
    LT              reduce using rule 51 (ptr -> STAR ID .)
    EQUALS          reduce using rule 51 (ptr -> STAR ID .)
    NOT             reduce using rule 51 (ptr -> STAR ID .)
    PLUS            reduce using rule 51 (ptr -> STAR ID .)
    MINUS           reduce using rule 51 (ptr -> STAR ID .)
    SEMICOLON       reduce using rule 51 (ptr -> STAR ID .)
    RPAREN          reduce using rule 51 (ptr -> STAR ID .)
    AND             reduce using rule 51 (ptr -> STAR ID .)
    OR              reduce using rule 51 (ptr -> STAR ID .)
    COMMA           reduce using rule 51 (ptr -> STAR ID .)


state 27

    (11) while_stmt -> WHILE LPAREN . bool_expr RPAREN compound_stmt
    (25) bool_expr -> . bool_expr OR OR a_bool_expr
    (26) bool_expr -> . a_bool_expr
    (27) a_bool_expr -> . a_bool_expr AND AND n_bool_expr
    (28) a_bool_expr -> . n_bool_expr
    (29) n_bool_expr -> . NOT n_bool_expr
    (30) n_bool_expr -> . sub_bool_expr
    (31) sub_bool_expr -> . ptr_expr GT ptr_expr
    (32) sub_bool_expr -> . ptr_expr GT EQUALS ptr_expr
    (33) sub_bool_expr -> . ptr_expr LT ptr_expr
    (34) sub_bool_expr -> . ptr_expr LT EQUALS ptr_expr
    (35) sub_bool_expr -> . ptr_expr EQUALS EQUALS ptr_expr
    (36) sub_bool_expr -> . ptr_expr NOT EQUALS ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    NOT             shift and go to state 54
    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    n_bool_expr                    shift and go to state 53
    addr                           shift and go to state 46
    bool_expr                      shift and go to state 50
    sub_bool_expr                  shift and go to state 41
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    a_bool_expr                    shift and go to state 43
    ptr                            shift and go to state 47
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 51

state 28

    (23) ptr_assgn -> ptr EQUALS . ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 55
    ptr                            shift and go to state 47

state 29

    (6) stmt -> assgn SEMICOLON .

    RCURL           reduce using rule 6 (stmt -> assgn SEMICOLON .)
    INT             reduce using rule 6 (stmt -> assgn SEMICOLON .)
    IF              reduce using rule 6 (stmt -> assgn SEMICOLON .)
    WHILE           reduce using rule 6 (stmt -> assgn SEMICOLON .)
    ID              reduce using rule 6 (stmt -> assgn SEMICOLON .)
    STAR            reduce using rule 6 (stmt -> assgn SEMICOLON .)
    ELSE            reduce using rule 6 (stmt -> assgn SEMICOLON .)


state 30

    (1) prog -> VOID MAIN LPAREN RPAREN LCURL body RCURL .

    $end            reduce using rule 1 (prog -> VOID MAIN LPAREN RPAREN LCURL body RCURL .)


state 31

    (3) body -> body stmt .

    RCURL           reduce using rule 3 (body -> body stmt .)
    INT             reduce using rule 3 (body -> body stmt .)
    IF              reduce using rule 3 (body -> body stmt .)
    WHILE           reduce using rule 3 (body -> body stmt .)
    ID              reduce using rule 3 (body -> body stmt .)
    STAR            reduce using rule 3 (body -> body stmt .)


state 32

    (24) num_assgn -> ID EQUALS . ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 56
    ptr                            shift and go to state 47

state 33

    (9) if_stmt -> IF LPAREN . bool_expr RPAREN compound_stmt
    (10) if_stmt -> IF LPAREN . bool_expr RPAREN compound_stmt ELSE compound_stmt
    (25) bool_expr -> . bool_expr OR OR a_bool_expr
    (26) bool_expr -> . a_bool_expr
    (27) a_bool_expr -> . a_bool_expr AND AND n_bool_expr
    (28) a_bool_expr -> . n_bool_expr
    (29) n_bool_expr -> . NOT n_bool_expr
    (30) n_bool_expr -> . sub_bool_expr
    (31) sub_bool_expr -> . ptr_expr GT ptr_expr
    (32) sub_bool_expr -> . ptr_expr GT EQUALS ptr_expr
    (33) sub_bool_expr -> . ptr_expr LT ptr_expr
    (34) sub_bool_expr -> . ptr_expr LT EQUALS ptr_expr
    (35) sub_bool_expr -> . ptr_expr EQUALS EQUALS ptr_expr
    (36) sub_bool_expr -> . ptr_expr NOT EQUALS ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    NOT             shift and go to state 54
    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    n_bool_expr                    shift and go to state 53
    addr                           shift and go to state 46
    bool_expr                      shift and go to state 57
    sub_bool_expr                  shift and go to state 41
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    a_bool_expr                    shift and go to state 43
    ptr                            shift and go to state 47
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 51

state 34

    (18) decl -> INT decl_list .
    (19) decl_list -> decl_list . COMMA ID
    (20) decl_list -> decl_list . COMMA ptr

    SEMICOLON       reduce using rule 18 (decl -> INT decl_list .)
    COMMA           shift and go to state 58


state 35

    (22) decl_list -> ptr .

    COMMA           reduce using rule 22 (decl_list -> ptr .)
    SEMICOLON       reduce using rule 22 (decl_list -> ptr .)


state 36

    (21) decl_list -> ID .

    COMMA           reduce using rule 21 (decl_list -> ID .)
    SEMICOLON       reduce using rule 21 (decl_list -> ID .)


state 37

    (55) addr -> AND addr .

    STAR            reduce using rule 55 (addr -> AND addr .)
    SLASH           reduce using rule 55 (addr -> AND addr .)
    GT              reduce using rule 55 (addr -> AND addr .)
    LT              reduce using rule 55 (addr -> AND addr .)
    EQUALS          reduce using rule 55 (addr -> AND addr .)
    NOT             reduce using rule 55 (addr -> AND addr .)
    PLUS            reduce using rule 55 (addr -> AND addr .)
    MINUS           reduce using rule 55 (addr -> AND addr .)
    SEMICOLON       reduce using rule 55 (addr -> AND addr .)
    AND             reduce using rule 55 (addr -> AND addr .)
    RPAREN          reduce using rule 55 (addr -> AND addr .)
    OR              reduce using rule 55 (addr -> AND addr .)
    COMMA           reduce using rule 55 (addr -> AND addr .)


state 38

    (53) addr -> AND ID .

    STAR            reduce using rule 53 (addr -> AND ID .)
    SLASH           reduce using rule 53 (addr -> AND ID .)
    GT              reduce using rule 53 (addr -> AND ID .)
    LT              reduce using rule 53 (addr -> AND ID .)
    EQUALS          reduce using rule 53 (addr -> AND ID .)
    NOT             reduce using rule 53 (addr -> AND ID .)
    PLUS            reduce using rule 53 (addr -> AND ID .)
    MINUS           reduce using rule 53 (addr -> AND ID .)
    SEMICOLON       reduce using rule 53 (addr -> AND ID .)
    AND             reduce using rule 53 (addr -> AND ID .)
    RPAREN          reduce using rule 53 (addr -> AND ID .)
    OR              reduce using rule 53 (addr -> AND ID .)
    COMMA           reduce using rule 53 (addr -> AND ID .)


state 39

    (54) addr -> AND ptr .

    STAR            reduce using rule 54 (addr -> AND ptr .)
    SLASH           reduce using rule 54 (addr -> AND ptr .)
    GT              reduce using rule 54 (addr -> AND ptr .)
    LT              reduce using rule 54 (addr -> AND ptr .)
    EQUALS          reduce using rule 54 (addr -> AND ptr .)
    NOT             reduce using rule 54 (addr -> AND ptr .)
    PLUS            reduce using rule 54 (addr -> AND ptr .)
    MINUS           reduce using rule 54 (addr -> AND ptr .)
    SEMICOLON       reduce using rule 54 (addr -> AND ptr .)
    AND             reduce using rule 54 (addr -> AND ptr .)
    RPAREN          reduce using rule 54 (addr -> AND ptr .)
    OR              reduce using rule 54 (addr -> AND ptr .)
    COMMA           reduce using rule 54 (addr -> AND ptr .)


state 40

    (49) ptr_expr_base -> LPAREN . ptr_expr RPAREN
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 59
    ptr                            shift and go to state 47

state 41

    (30) n_bool_expr -> sub_bool_expr .

    AND             reduce using rule 30 (n_bool_expr -> sub_bool_expr .)
    RPAREN          reduce using rule 30 (n_bool_expr -> sub_bool_expr .)
    OR              reduce using rule 30 (n_bool_expr -> sub_bool_expr .)


state 42

    (42) ptr_factor -> ptr_term .

    STAR            reduce using rule 42 (ptr_factor -> ptr_term .)
    SLASH           reduce using rule 42 (ptr_factor -> ptr_term .)
    GT              reduce using rule 42 (ptr_factor -> ptr_term .)
    LT              reduce using rule 42 (ptr_factor -> ptr_term .)
    EQUALS          reduce using rule 42 (ptr_factor -> ptr_term .)
    NOT             reduce using rule 42 (ptr_factor -> ptr_term .)
    PLUS            reduce using rule 42 (ptr_factor -> ptr_term .)
    MINUS           reduce using rule 42 (ptr_factor -> ptr_term .)
    AND             reduce using rule 42 (ptr_factor -> ptr_term .)
    RPAREN          reduce using rule 42 (ptr_factor -> ptr_term .)
    OR              reduce using rule 42 (ptr_factor -> ptr_term .)
    SEMICOLON       reduce using rule 42 (ptr_factor -> ptr_term .)


state 43

    (26) bool_expr -> a_bool_expr .
    (27) a_bool_expr -> a_bool_expr . AND AND n_bool_expr

    RPAREN          reduce using rule 26 (bool_expr -> a_bool_expr .)
    OR              reduce using rule 26 (bool_expr -> a_bool_expr .)
    AND             shift and go to state 60


state 44

    (39) ptr_expr -> ptr_factor .
    (40) ptr_factor -> ptr_factor . STAR ptr_term
    (41) ptr_factor -> ptr_factor . SLASH ptr_term

    PLUS            reduce using rule 39 (ptr_expr -> ptr_factor .)
    MINUS           reduce using rule 39 (ptr_expr -> ptr_factor .)
    AND             reduce using rule 39 (ptr_expr -> ptr_factor .)
    RPAREN          reduce using rule 39 (ptr_expr -> ptr_factor .)
    OR              reduce using rule 39 (ptr_expr -> ptr_factor .)
    SEMICOLON       reduce using rule 39 (ptr_expr -> ptr_factor .)
    GT              reduce using rule 39 (ptr_expr -> ptr_factor .)
    LT              reduce using rule 39 (ptr_expr -> ptr_factor .)
    EQUALS          reduce using rule 39 (ptr_expr -> ptr_factor .)
    NOT             reduce using rule 39 (ptr_expr -> ptr_factor .)
    STAR            shift and go to state 61
    SLASH           shift and go to state 62


state 45

    (43) ptr_term -> MINUS . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_expr_base                  shift and go to state 48
    ptr                            shift and go to state 47
    ptr_term                       shift and go to state 63

state 46

    (48) ptr_expr_base -> addr .

    STAR            reduce using rule 48 (ptr_expr_base -> addr .)
    SLASH           reduce using rule 48 (ptr_expr_base -> addr .)
    PLUS            reduce using rule 48 (ptr_expr_base -> addr .)
    MINUS           reduce using rule 48 (ptr_expr_base -> addr .)
    AND             reduce using rule 48 (ptr_expr_base -> addr .)
    RPAREN          reduce using rule 48 (ptr_expr_base -> addr .)
    OR              reduce using rule 48 (ptr_expr_base -> addr .)
    SEMICOLON       reduce using rule 48 (ptr_expr_base -> addr .)
    GT              reduce using rule 48 (ptr_expr_base -> addr .)
    LT              reduce using rule 48 (ptr_expr_base -> addr .)
    EQUALS          reduce using rule 48 (ptr_expr_base -> addr .)
    NOT             reduce using rule 48 (ptr_expr_base -> addr .)


state 47

    (47) ptr_expr_base -> ptr .

    STAR            reduce using rule 47 (ptr_expr_base -> ptr .)
    SLASH           reduce using rule 47 (ptr_expr_base -> ptr .)
    PLUS            reduce using rule 47 (ptr_expr_base -> ptr .)
    MINUS           reduce using rule 47 (ptr_expr_base -> ptr .)
    AND             reduce using rule 47 (ptr_expr_base -> ptr .)
    RPAREN          reduce using rule 47 (ptr_expr_base -> ptr .)
    OR              reduce using rule 47 (ptr_expr_base -> ptr .)
    SEMICOLON       reduce using rule 47 (ptr_expr_base -> ptr .)
    GT              reduce using rule 47 (ptr_expr_base -> ptr .)
    LT              reduce using rule 47 (ptr_expr_base -> ptr .)
    EQUALS          reduce using rule 47 (ptr_expr_base -> ptr .)
    NOT             reduce using rule 47 (ptr_expr_base -> ptr .)


state 48

    (44) ptr_term -> ptr_expr_base .

    STAR            reduce using rule 44 (ptr_term -> ptr_expr_base .)
    SLASH           reduce using rule 44 (ptr_term -> ptr_expr_base .)
    PLUS            reduce using rule 44 (ptr_term -> ptr_expr_base .)
    MINUS           reduce using rule 44 (ptr_term -> ptr_expr_base .)
    AND             reduce using rule 44 (ptr_term -> ptr_expr_base .)
    RPAREN          reduce using rule 44 (ptr_term -> ptr_expr_base .)
    OR              reduce using rule 44 (ptr_term -> ptr_expr_base .)
    GT              reduce using rule 44 (ptr_term -> ptr_expr_base .)
    LT              reduce using rule 44 (ptr_term -> ptr_expr_base .)
    EQUALS          reduce using rule 44 (ptr_term -> ptr_expr_base .)
    NOT             reduce using rule 44 (ptr_term -> ptr_expr_base .)
    SEMICOLON       reduce using rule 44 (ptr_term -> ptr_expr_base .)


state 49

    (46) ptr_expr_base -> NUM .

    STAR            reduce using rule 46 (ptr_expr_base -> NUM .)
    SLASH           reduce using rule 46 (ptr_expr_base -> NUM .)
    PLUS            reduce using rule 46 (ptr_expr_base -> NUM .)
    MINUS           reduce using rule 46 (ptr_expr_base -> NUM .)
    AND             reduce using rule 46 (ptr_expr_base -> NUM .)
    RPAREN          reduce using rule 46 (ptr_expr_base -> NUM .)
    OR              reduce using rule 46 (ptr_expr_base -> NUM .)
    SEMICOLON       reduce using rule 46 (ptr_expr_base -> NUM .)
    GT              reduce using rule 46 (ptr_expr_base -> NUM .)
    LT              reduce using rule 46 (ptr_expr_base -> NUM .)
    EQUALS          reduce using rule 46 (ptr_expr_base -> NUM .)
    NOT             reduce using rule 46 (ptr_expr_base -> NUM .)


state 50

    (11) while_stmt -> WHILE LPAREN bool_expr . RPAREN compound_stmt
    (25) bool_expr -> bool_expr . OR OR a_bool_expr

    RPAREN          shift and go to state 64
    OR              shift and go to state 65


state 51

    (31) sub_bool_expr -> ptr_expr . GT ptr_expr
    (32) sub_bool_expr -> ptr_expr . GT EQUALS ptr_expr
    (33) sub_bool_expr -> ptr_expr . LT ptr_expr
    (34) sub_bool_expr -> ptr_expr . LT EQUALS ptr_expr
    (35) sub_bool_expr -> ptr_expr . EQUALS EQUALS ptr_expr
    (36) sub_bool_expr -> ptr_expr . NOT EQUALS ptr_expr
    (37) ptr_expr -> ptr_expr . PLUS ptr_factor
    (38) ptr_expr -> ptr_expr . MINUS ptr_factor

    GT              shift and go to state 66
    LT              shift and go to state 68
    EQUALS          shift and go to state 67
    NOT             shift and go to state 70
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71


state 52

    (45) ptr_expr_base -> ID .

    STAR            reduce using rule 45 (ptr_expr_base -> ID .)
    SLASH           reduce using rule 45 (ptr_expr_base -> ID .)
    PLUS            reduce using rule 45 (ptr_expr_base -> ID .)
    MINUS           reduce using rule 45 (ptr_expr_base -> ID .)
    AND             reduce using rule 45 (ptr_expr_base -> ID .)
    RPAREN          reduce using rule 45 (ptr_expr_base -> ID .)
    OR              reduce using rule 45 (ptr_expr_base -> ID .)
    SEMICOLON       reduce using rule 45 (ptr_expr_base -> ID .)
    GT              reduce using rule 45 (ptr_expr_base -> ID .)
    LT              reduce using rule 45 (ptr_expr_base -> ID .)
    EQUALS          reduce using rule 45 (ptr_expr_base -> ID .)
    NOT             reduce using rule 45 (ptr_expr_base -> ID .)


state 53

    (28) a_bool_expr -> n_bool_expr .

    AND             reduce using rule 28 (a_bool_expr -> n_bool_expr .)
    RPAREN          reduce using rule 28 (a_bool_expr -> n_bool_expr .)
    OR              reduce using rule 28 (a_bool_expr -> n_bool_expr .)


state 54

    (29) n_bool_expr -> NOT . n_bool_expr
    (29) n_bool_expr -> . NOT n_bool_expr
    (30) n_bool_expr -> . sub_bool_expr
    (31) sub_bool_expr -> . ptr_expr GT ptr_expr
    (32) sub_bool_expr -> . ptr_expr GT EQUALS ptr_expr
    (33) sub_bool_expr -> . ptr_expr LT ptr_expr
    (34) sub_bool_expr -> . ptr_expr LT EQUALS ptr_expr
    (35) sub_bool_expr -> . ptr_expr EQUALS EQUALS ptr_expr
    (36) sub_bool_expr -> . ptr_expr NOT EQUALS ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    NOT             shift and go to state 54
    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    n_bool_expr                    shift and go to state 72
    addr                           shift and go to state 46
    sub_bool_expr                  shift and go to state 41
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 51
    ptr                            shift and go to state 47

state 55

    (23) ptr_assgn -> ptr EQUALS ptr_expr .
    (37) ptr_expr -> ptr_expr . PLUS ptr_factor
    (38) ptr_expr -> ptr_expr . MINUS ptr_factor

    SEMICOLON       reduce using rule 23 (ptr_assgn -> ptr EQUALS ptr_expr .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71


state 56

    (24) num_assgn -> ID EQUALS ptr_expr .
    (37) ptr_expr -> ptr_expr . PLUS ptr_factor
    (38) ptr_expr -> ptr_expr . MINUS ptr_factor

    SEMICOLON       reduce using rule 24 (num_assgn -> ID EQUALS ptr_expr .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71


state 57

    (9) if_stmt -> IF LPAREN bool_expr . RPAREN compound_stmt
    (10) if_stmt -> IF LPAREN bool_expr . RPAREN compound_stmt ELSE compound_stmt
    (25) bool_expr -> bool_expr . OR OR a_bool_expr

    RPAREN          shift and go to state 73
    OR              shift and go to state 65


state 58

    (19) decl_list -> decl_list COMMA . ID
    (20) decl_list -> decl_list COMMA . ptr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr

    ID              shift and go to state 75
    STAR            shift and go to state 8

    ptr                            shift and go to state 74

state 59

    (49) ptr_expr_base -> LPAREN ptr_expr . RPAREN
    (37) ptr_expr -> ptr_expr . PLUS ptr_factor
    (38) ptr_expr -> ptr_expr . MINUS ptr_factor

    RPAREN          shift and go to state 76
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71


state 60

    (27) a_bool_expr -> a_bool_expr AND . AND n_bool_expr

    AND             shift and go to state 77


state 61

    (40) ptr_factor -> ptr_factor STAR . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 78
    ptr_expr_base                  shift and go to state 48
    ptr                            shift and go to state 47

state 62

    (41) ptr_factor -> ptr_factor SLASH . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 79
    ptr_expr_base                  shift and go to state 48
    ptr                            shift and go to state 47

state 63

    (43) ptr_term -> MINUS ptr_term .

    STAR            reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    SLASH           reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    PLUS            reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    MINUS           reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    AND             reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    RPAREN          reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    OR              reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    GT              reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    LT              reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    EQUALS          reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    NOT             reduce using rule 43 (ptr_term -> MINUS ptr_term .)
    SEMICOLON       reduce using rule 43 (ptr_term -> MINUS ptr_term .)


state 64

    (11) while_stmt -> WHILE LPAREN bool_expr RPAREN . compound_stmt
    (12) compound_stmt -> . stmt
    (13) compound_stmt -> . SEMICOLON
    (14) compound_stmt -> . LCURL RCURL
    (15) compound_stmt -> . LCURL body RCURL
    (5) stmt -> . decl SEMICOLON
    (6) stmt -> . assgn SEMICOLON
    (7) stmt -> . if_stmt
    (8) stmt -> . while_stmt
    (18) decl -> . INT decl_list
    (16) assgn -> . ptr_assgn
    (17) assgn -> . num_assgn
    (9) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt
    (10) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt
    (11) while_stmt -> . WHILE LPAREN bool_expr RPAREN compound_stmt
    (23) ptr_assgn -> . ptr EQUALS ptr_expr
    (24) num_assgn -> . ID EQUALS ptr_expr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr

    SEMICOLON       shift and go to state 81
    LCURL           shift and go to state 80
    INT             shift and go to state 19
    IF              shift and go to state 17
    WHILE           shift and go to state 9
    ID              shift and go to state 16
    STAR            shift and go to state 8

    decl                           shift and go to state 7
    if_stmt                        shift and go to state 18
    assgn                          shift and go to state 11
    num_assgn                      shift and go to state 14
    ptr_assgn                      shift and go to state 20
    stmt                           shift and go to state 83
    ptr                            shift and go to state 10
    while_stmt                     shift and go to state 21
    compound_stmt                  shift and go to state 82

state 65

    (25) bool_expr -> bool_expr OR . OR a_bool_expr

    OR              shift and go to state 84


state 66

    (31) sub_bool_expr -> ptr_expr GT . ptr_expr
    (32) sub_bool_expr -> ptr_expr GT . EQUALS ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    EQUALS          shift and go to state 85
    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 86
    ptr                            shift and go to state 47

state 67

    (35) sub_bool_expr -> ptr_expr EQUALS . EQUALS ptr_expr

    EQUALS          shift and go to state 87


state 68

    (33) sub_bool_expr -> ptr_expr LT . ptr_expr
    (34) sub_bool_expr -> ptr_expr LT . EQUALS ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    EQUALS          shift and go to state 88
    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 89
    ptr                            shift and go to state 47

state 69

    (37) ptr_expr -> ptr_expr PLUS . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 90
    ptr                            shift and go to state 47

state 70

    (36) sub_bool_expr -> ptr_expr NOT . EQUALS ptr_expr

    EQUALS          shift and go to state 91


state 71

    (38) ptr_expr -> ptr_expr MINUS . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 92
    ptr                            shift and go to state 47

state 72

    (29) n_bool_expr -> NOT n_bool_expr .

    AND             reduce using rule 29 (n_bool_expr -> NOT n_bool_expr .)
    RPAREN          reduce using rule 29 (n_bool_expr -> NOT n_bool_expr .)
    OR              reduce using rule 29 (n_bool_expr -> NOT n_bool_expr .)


state 73

    (9) if_stmt -> IF LPAREN bool_expr RPAREN . compound_stmt
    (10) if_stmt -> IF LPAREN bool_expr RPAREN . compound_stmt ELSE compound_stmt
    (12) compound_stmt -> . stmt
    (13) compound_stmt -> . SEMICOLON
    (14) compound_stmt -> . LCURL RCURL
    (15) compound_stmt -> . LCURL body RCURL
    (5) stmt -> . decl SEMICOLON
    (6) stmt -> . assgn SEMICOLON
    (7) stmt -> . if_stmt
    (8) stmt -> . while_stmt
    (18) decl -> . INT decl_list
    (16) assgn -> . ptr_assgn
    (17) assgn -> . num_assgn
    (9) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt
    (10) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt
    (11) while_stmt -> . WHILE LPAREN bool_expr RPAREN compound_stmt
    (23) ptr_assgn -> . ptr EQUALS ptr_expr
    (24) num_assgn -> . ID EQUALS ptr_expr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr

    SEMICOLON       shift and go to state 81
    LCURL           shift and go to state 80
    INT             shift and go to state 19
    IF              shift and go to state 17
    WHILE           shift and go to state 9
    ID              shift and go to state 16
    STAR            shift and go to state 8

    decl                           shift and go to state 7
    if_stmt                        shift and go to state 18
    assgn                          shift and go to state 11
    num_assgn                      shift and go to state 14
    ptr_assgn                      shift and go to state 20
    stmt                           shift and go to state 83
    ptr                            shift and go to state 10
    while_stmt                     shift and go to state 21
    compound_stmt                  shift and go to state 93

state 74

    (20) decl_list -> decl_list COMMA ptr .

    COMMA           reduce using rule 20 (decl_list -> decl_list COMMA ptr .)
    SEMICOLON       reduce using rule 20 (decl_list -> decl_list COMMA ptr .)


state 75

    (19) decl_list -> decl_list COMMA ID .

    COMMA           reduce using rule 19 (decl_list -> decl_list COMMA ID .)
    SEMICOLON       reduce using rule 19 (decl_list -> decl_list COMMA ID .)


state 76

    (49) ptr_expr_base -> LPAREN ptr_expr RPAREN .

    STAR            reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    SLASH           reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    PLUS            reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    MINUS           reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    AND             reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    RPAREN          reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    OR              reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    SEMICOLON       reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    GT              reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    LT              reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    EQUALS          reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)
    NOT             reduce using rule 49 (ptr_expr_base -> LPAREN ptr_expr RPAREN .)


state 77

    (27) a_bool_expr -> a_bool_expr AND AND . n_bool_expr
    (29) n_bool_expr -> . NOT n_bool_expr
    (30) n_bool_expr -> . sub_bool_expr
    (31) sub_bool_expr -> . ptr_expr GT ptr_expr
    (32) sub_bool_expr -> . ptr_expr GT EQUALS ptr_expr
    (33) sub_bool_expr -> . ptr_expr LT ptr_expr
    (34) sub_bool_expr -> . ptr_expr LT EQUALS ptr_expr
    (35) sub_bool_expr -> . ptr_expr EQUALS EQUALS ptr_expr
    (36) sub_bool_expr -> . ptr_expr NOT EQUALS ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    NOT             shift and go to state 54
    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    n_bool_expr                    shift and go to state 94
    addr                           shift and go to state 46
    sub_bool_expr                  shift and go to state 41
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 51
    ptr                            shift and go to state 47

state 78

    (40) ptr_factor -> ptr_factor STAR ptr_term .

    STAR            reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    SLASH           reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    GT              reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    LT              reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    EQUALS          reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    NOT             reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    PLUS            reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    MINUS           reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    AND             reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    RPAREN          reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    OR              reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)
    SEMICOLON       reduce using rule 40 (ptr_factor -> ptr_factor STAR ptr_term .)


state 79

    (41) ptr_factor -> ptr_factor SLASH ptr_term .

    STAR            reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    SLASH           reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    GT              reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    LT              reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    EQUALS          reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    NOT             reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    PLUS            reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    MINUS           reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    AND             reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    RPAREN          reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    OR              reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)
    SEMICOLON       reduce using rule 41 (ptr_factor -> ptr_factor SLASH ptr_term .)


state 80

    (14) compound_stmt -> LCURL . RCURL
    (15) compound_stmt -> LCURL . body RCURL
    (3) body -> . body stmt
    (4) body -> . stmt
    (5) stmt -> . decl SEMICOLON
    (6) stmt -> . assgn SEMICOLON
    (7) stmt -> . if_stmt
    (8) stmt -> . while_stmt
    (18) decl -> . INT decl_list
    (16) assgn -> . ptr_assgn
    (17) assgn -> . num_assgn
    (9) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt
    (10) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt
    (11) while_stmt -> . WHILE LPAREN bool_expr RPAREN compound_stmt
    (23) ptr_assgn -> . ptr EQUALS ptr_expr
    (24) num_assgn -> . ID EQUALS ptr_expr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr

    RCURL           shift and go to state 95
    INT             shift and go to state 19
    IF              shift and go to state 17
    WHILE           shift and go to state 9
    ID              shift and go to state 16
    STAR            shift and go to state 8

    body                           shift and go to state 96
    decl                           shift and go to state 7
    if_stmt                        shift and go to state 18
    assgn                          shift and go to state 11
    num_assgn                      shift and go to state 14
    ptr_assgn                      shift and go to state 20
    stmt                           shift and go to state 15
    ptr                            shift and go to state 10
    while_stmt                     shift and go to state 21

state 81

    (13) compound_stmt -> SEMICOLON .

    RCURL           reduce using rule 13 (compound_stmt -> SEMICOLON .)
    INT             reduce using rule 13 (compound_stmt -> SEMICOLON .)
    IF              reduce using rule 13 (compound_stmt -> SEMICOLON .)
    WHILE           reduce using rule 13 (compound_stmt -> SEMICOLON .)
    ID              reduce using rule 13 (compound_stmt -> SEMICOLON .)
    STAR            reduce using rule 13 (compound_stmt -> SEMICOLON .)
    ELSE            reduce using rule 13 (compound_stmt -> SEMICOLON .)


state 82

    (11) while_stmt -> WHILE LPAREN bool_expr RPAREN compound_stmt .

    RCURL           reduce using rule 11 (while_stmt -> WHILE LPAREN bool_expr RPAREN compound_stmt .)
    INT             reduce using rule 11 (while_stmt -> WHILE LPAREN bool_expr RPAREN compound_stmt .)
    IF              reduce using rule 11 (while_stmt -> WHILE LPAREN bool_expr RPAREN compound_stmt .)
    WHILE           reduce using rule 11 (while_stmt -> WHILE LPAREN bool_expr RPAREN compound_stmt .)
    ID              reduce using rule 11 (while_stmt -> WHILE LPAREN bool_expr RPAREN compound_stmt .)
    STAR            reduce using rule 11 (while_stmt -> WHILE LPAREN bool_expr RPAREN compound_stmt .)
    ELSE            reduce using rule 11 (while_stmt -> WHILE LPAREN bool_expr RPAREN compound_stmt .)


state 83

    (12) compound_stmt -> stmt .

    RCURL           reduce using rule 12 (compound_stmt -> stmt .)
    INT             reduce using rule 12 (compound_stmt -> stmt .)
    IF              reduce using rule 12 (compound_stmt -> stmt .)
    WHILE           reduce using rule 12 (compound_stmt -> stmt .)
    ID              reduce using rule 12 (compound_stmt -> stmt .)
    STAR            reduce using rule 12 (compound_stmt -> stmt .)
    ELSE            reduce using rule 12 (compound_stmt -> stmt .)


state 84

    (25) bool_expr -> bool_expr OR OR . a_bool_expr
    (27) a_bool_expr -> . a_bool_expr AND AND n_bool_expr
    (28) a_bool_expr -> . n_bool_expr
    (29) n_bool_expr -> . NOT n_bool_expr
    (30) n_bool_expr -> . sub_bool_expr
    (31) sub_bool_expr -> . ptr_expr GT ptr_expr
    (32) sub_bool_expr -> . ptr_expr GT EQUALS ptr_expr
    (33) sub_bool_expr -> . ptr_expr LT ptr_expr
    (34) sub_bool_expr -> . ptr_expr LT EQUALS ptr_expr
    (35) sub_bool_expr -> . ptr_expr EQUALS EQUALS ptr_expr
    (36) sub_bool_expr -> . ptr_expr NOT EQUALS ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    NOT             shift and go to state 54
    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    n_bool_expr                    shift and go to state 53
    addr                           shift and go to state 46
    sub_bool_expr                  shift and go to state 41
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    a_bool_expr                    shift and go to state 97
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 51
    ptr                            shift and go to state 47

state 85

    (32) sub_bool_expr -> ptr_expr GT EQUALS . ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 98
    ptr                            shift and go to state 47

state 86

    (31) sub_bool_expr -> ptr_expr GT ptr_expr .
    (37) ptr_expr -> ptr_expr . PLUS ptr_factor
    (38) ptr_expr -> ptr_expr . MINUS ptr_factor

    AND             reduce using rule 31 (sub_bool_expr -> ptr_expr GT ptr_expr .)
    RPAREN          reduce using rule 31 (sub_bool_expr -> ptr_expr GT ptr_expr .)
    OR              reduce using rule 31 (sub_bool_expr -> ptr_expr GT ptr_expr .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71


state 87

    (35) sub_bool_expr -> ptr_expr EQUALS EQUALS . ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 99
    ptr                            shift and go to state 47

state 88

    (34) sub_bool_expr -> ptr_expr LT EQUALS . ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 100
    ptr                            shift and go to state 47

state 89

    (33) sub_bool_expr -> ptr_expr LT ptr_expr .
    (37) ptr_expr -> ptr_expr . PLUS ptr_factor
    (38) ptr_expr -> ptr_expr . MINUS ptr_factor

    AND             reduce using rule 33 (sub_bool_expr -> ptr_expr LT ptr_expr .)
    RPAREN          reduce using rule 33 (sub_bool_expr -> ptr_expr LT ptr_expr .)
    OR              reduce using rule 33 (sub_bool_expr -> ptr_expr LT ptr_expr .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71


state 90

    (37) ptr_expr -> ptr_expr PLUS ptr_factor .
    (40) ptr_factor -> ptr_factor . STAR ptr_term
    (41) ptr_factor -> ptr_factor . SLASH ptr_term

    PLUS            reduce using rule 37 (ptr_expr -> ptr_expr PLUS ptr_factor .)
    MINUS           reduce using rule 37 (ptr_expr -> ptr_expr PLUS ptr_factor .)
    AND             reduce using rule 37 (ptr_expr -> ptr_expr PLUS ptr_factor .)
    RPAREN          reduce using rule 37 (ptr_expr -> ptr_expr PLUS ptr_factor .)
    OR              reduce using rule 37 (ptr_expr -> ptr_expr PLUS ptr_factor .)
    SEMICOLON       reduce using rule 37 (ptr_expr -> ptr_expr PLUS ptr_factor .)
    GT              reduce using rule 37 (ptr_expr -> ptr_expr PLUS ptr_factor .)
    LT              reduce using rule 37 (ptr_expr -> ptr_expr PLUS ptr_factor .)
    EQUALS          reduce using rule 37 (ptr_expr -> ptr_expr PLUS ptr_factor .)
    NOT             reduce using rule 37 (ptr_expr -> ptr_expr PLUS ptr_factor .)
    STAR            shift and go to state 61
    SLASH           shift and go to state 62


state 91

    (36) sub_bool_expr -> ptr_expr NOT EQUALS . ptr_expr
    (37) ptr_expr -> . ptr_expr PLUS ptr_factor
    (38) ptr_expr -> . ptr_expr MINUS ptr_factor
    (39) ptr_expr -> . ptr_factor
    (40) ptr_factor -> . ptr_factor STAR ptr_term
    (41) ptr_factor -> . ptr_factor SLASH ptr_term
    (42) ptr_factor -> . ptr_term
    (43) ptr_term -> . MINUS ptr_term
    (44) ptr_term -> . ptr_expr_base
    (45) ptr_expr_base -> . ID
    (46) ptr_expr_base -> . NUM
    (47) ptr_expr_base -> . ptr
    (48) ptr_expr_base -> . addr
    (49) ptr_expr_base -> . LPAREN ptr_expr RPAREN
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr
    (53) addr -> . AND ID
    (54) addr -> . AND ptr
    (55) addr -> . AND addr

    MINUS           shift and go to state 45
    ID              shift and go to state 52
    NUM             shift and go to state 49
    LPAREN          shift and go to state 40
    STAR            shift and go to state 8
    AND             shift and go to state 23

    addr                           shift and go to state 46
    ptr_term                       shift and go to state 42
    ptr_expr_base                  shift and go to state 48
    ptr_factor                     shift and go to state 44
    ptr_expr                       shift and go to state 101
    ptr                            shift and go to state 47

state 92

    (38) ptr_expr -> ptr_expr MINUS ptr_factor .
    (40) ptr_factor -> ptr_factor . STAR ptr_term
    (41) ptr_factor -> ptr_factor . SLASH ptr_term

    PLUS            reduce using rule 38 (ptr_expr -> ptr_expr MINUS ptr_factor .)
    MINUS           reduce using rule 38 (ptr_expr -> ptr_expr MINUS ptr_factor .)
    AND             reduce using rule 38 (ptr_expr -> ptr_expr MINUS ptr_factor .)
    RPAREN          reduce using rule 38 (ptr_expr -> ptr_expr MINUS ptr_factor .)
    OR              reduce using rule 38 (ptr_expr -> ptr_expr MINUS ptr_factor .)
    SEMICOLON       reduce using rule 38 (ptr_expr -> ptr_expr MINUS ptr_factor .)
    GT              reduce using rule 38 (ptr_expr -> ptr_expr MINUS ptr_factor .)
    LT              reduce using rule 38 (ptr_expr -> ptr_expr MINUS ptr_factor .)
    EQUALS          reduce using rule 38 (ptr_expr -> ptr_expr MINUS ptr_factor .)
    NOT             reduce using rule 38 (ptr_expr -> ptr_expr MINUS ptr_factor .)
    STAR            shift and go to state 61
    SLASH           shift and go to state 62


state 93

    (9) if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt .
    (10) if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt . ELSE compound_stmt

    RCURL           reduce using rule 9 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt .)
    INT             reduce using rule 9 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt .)
    IF              reduce using rule 9 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt .)
    WHILE           reduce using rule 9 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt .)
    ID              reduce using rule 9 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt .)
    STAR            reduce using rule 9 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt .)
    ELSE            shift and go to state 102

  ! ELSE            [ reduce using rule 9 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt .) ]


state 94

    (27) a_bool_expr -> a_bool_expr AND AND n_bool_expr .

    AND             reduce using rule 27 (a_bool_expr -> a_bool_expr AND AND n_bool_expr .)
    RPAREN          reduce using rule 27 (a_bool_expr -> a_bool_expr AND AND n_bool_expr .)
    OR              reduce using rule 27 (a_bool_expr -> a_bool_expr AND AND n_bool_expr .)


state 95

    (14) compound_stmt -> LCURL RCURL .

    RCURL           reduce using rule 14 (compound_stmt -> LCURL RCURL .)
    INT             reduce using rule 14 (compound_stmt -> LCURL RCURL .)
    IF              reduce using rule 14 (compound_stmt -> LCURL RCURL .)
    WHILE           reduce using rule 14 (compound_stmt -> LCURL RCURL .)
    ID              reduce using rule 14 (compound_stmt -> LCURL RCURL .)
    STAR            reduce using rule 14 (compound_stmt -> LCURL RCURL .)
    ELSE            reduce using rule 14 (compound_stmt -> LCURL RCURL .)


state 96

    (15) compound_stmt -> LCURL body . RCURL
    (3) body -> body . stmt
    (5) stmt -> . decl SEMICOLON
    (6) stmt -> . assgn SEMICOLON
    (7) stmt -> . if_stmt
    (8) stmt -> . while_stmt
    (18) decl -> . INT decl_list
    (16) assgn -> . ptr_assgn
    (17) assgn -> . num_assgn
    (9) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt
    (10) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt
    (11) while_stmt -> . WHILE LPAREN bool_expr RPAREN compound_stmt
    (23) ptr_assgn -> . ptr EQUALS ptr_expr
    (24) num_assgn -> . ID EQUALS ptr_expr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr

    RCURL           shift and go to state 103
    INT             shift and go to state 19
    IF              shift and go to state 17
    WHILE           shift and go to state 9
    ID              shift and go to state 16
    STAR            shift and go to state 8

    decl                           shift and go to state 7
    if_stmt                        shift and go to state 18
    assgn                          shift and go to state 11
    num_assgn                      shift and go to state 14
    ptr_assgn                      shift and go to state 20
    stmt                           shift and go to state 31
    ptr                            shift and go to state 10
    while_stmt                     shift and go to state 21

state 97

    (25) bool_expr -> bool_expr OR OR a_bool_expr .
    (27) a_bool_expr -> a_bool_expr . AND AND n_bool_expr

    RPAREN          reduce using rule 25 (bool_expr -> bool_expr OR OR a_bool_expr .)
    OR              reduce using rule 25 (bool_expr -> bool_expr OR OR a_bool_expr .)
    AND             shift and go to state 60


state 98

    (32) sub_bool_expr -> ptr_expr GT EQUALS ptr_expr .
    (37) ptr_expr -> ptr_expr . PLUS ptr_factor
    (38) ptr_expr -> ptr_expr . MINUS ptr_factor

    AND             reduce using rule 32 (sub_bool_expr -> ptr_expr GT EQUALS ptr_expr .)
    RPAREN          reduce using rule 32 (sub_bool_expr -> ptr_expr GT EQUALS ptr_expr .)
    OR              reduce using rule 32 (sub_bool_expr -> ptr_expr GT EQUALS ptr_expr .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71


state 99

    (35) sub_bool_expr -> ptr_expr EQUALS EQUALS ptr_expr .
    (37) ptr_expr -> ptr_expr . PLUS ptr_factor
    (38) ptr_expr -> ptr_expr . MINUS ptr_factor

    AND             reduce using rule 35 (sub_bool_expr -> ptr_expr EQUALS EQUALS ptr_expr .)
    RPAREN          reduce using rule 35 (sub_bool_expr -> ptr_expr EQUALS EQUALS ptr_expr .)
    OR              reduce using rule 35 (sub_bool_expr -> ptr_expr EQUALS EQUALS ptr_expr .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71


state 100

    (34) sub_bool_expr -> ptr_expr LT EQUALS ptr_expr .
    (37) ptr_expr -> ptr_expr . PLUS ptr_factor
    (38) ptr_expr -> ptr_expr . MINUS ptr_factor

    AND             reduce using rule 34 (sub_bool_expr -> ptr_expr LT EQUALS ptr_expr .)
    RPAREN          reduce using rule 34 (sub_bool_expr -> ptr_expr LT EQUALS ptr_expr .)
    OR              reduce using rule 34 (sub_bool_expr -> ptr_expr LT EQUALS ptr_expr .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71


state 101

    (36) sub_bool_expr -> ptr_expr NOT EQUALS ptr_expr .
    (37) ptr_expr -> ptr_expr . PLUS ptr_factor
    (38) ptr_expr -> ptr_expr . MINUS ptr_factor

    AND             reduce using rule 36 (sub_bool_expr -> ptr_expr NOT EQUALS ptr_expr .)
    RPAREN          reduce using rule 36 (sub_bool_expr -> ptr_expr NOT EQUALS ptr_expr .)
    OR              reduce using rule 36 (sub_bool_expr -> ptr_expr NOT EQUALS ptr_expr .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 71


state 102

    (10) if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt ELSE . compound_stmt
    (12) compound_stmt -> . stmt
    (13) compound_stmt -> . SEMICOLON
    (14) compound_stmt -> . LCURL RCURL
    (15) compound_stmt -> . LCURL body RCURL
    (5) stmt -> . decl SEMICOLON
    (6) stmt -> . assgn SEMICOLON
    (7) stmt -> . if_stmt
    (8) stmt -> . while_stmt
    (18) decl -> . INT decl_list
    (16) assgn -> . ptr_assgn
    (17) assgn -> . num_assgn
    (9) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt
    (10) if_stmt -> . IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt
    (11) while_stmt -> . WHILE LPAREN bool_expr RPAREN compound_stmt
    (23) ptr_assgn -> . ptr EQUALS ptr_expr
    (24) num_assgn -> . ID EQUALS ptr_expr
    (50) ptr -> . STAR ptr
    (51) ptr -> . STAR ID
    (52) ptr -> . STAR addr

    SEMICOLON       shift and go to state 81
    LCURL           shift and go to state 80
    INT             shift and go to state 19
    IF              shift and go to state 17
    WHILE           shift and go to state 9
    ID              shift and go to state 16
    STAR            shift and go to state 8

    decl                           shift and go to state 7
    if_stmt                        shift and go to state 18
    assgn                          shift and go to state 11
    num_assgn                      shift and go to state 14
    ptr_assgn                      shift and go to state 20
    stmt                           shift and go to state 83
    ptr                            shift and go to state 10
    while_stmt                     shift and go to state 21
    compound_stmt                  shift and go to state 104

state 103

    (15) compound_stmt -> LCURL body RCURL .

    RCURL           reduce using rule 15 (compound_stmt -> LCURL body RCURL .)
    INT             reduce using rule 15 (compound_stmt -> LCURL body RCURL .)
    IF              reduce using rule 15 (compound_stmt -> LCURL body RCURL .)
    WHILE           reduce using rule 15 (compound_stmt -> LCURL body RCURL .)
    ID              reduce using rule 15 (compound_stmt -> LCURL body RCURL .)
    STAR            reduce using rule 15 (compound_stmt -> LCURL body RCURL .)
    ELSE            reduce using rule 15 (compound_stmt -> LCURL body RCURL .)


state 104

    (10) if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt .

    RCURL           reduce using rule 10 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt .)
    INT             reduce using rule 10 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt .)
    IF              reduce using rule 10 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt .)
    WHILE           reduce using rule 10 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt .)
    ID              reduce using rule 10 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt .)
    STAR            reduce using rule 10 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt .)
    ELSE            reduce using rule 10 (if_stmt -> IF LPAREN bool_expr RPAREN compound_stmt ELSE compound_stmt .)

