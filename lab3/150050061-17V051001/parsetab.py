
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftSTARSLASHrightUMINUSID STAR AND NUM LPAREN RPAREN COMMA LCURL RCURL SEMICOLON EQUALS INT VOID MAIN PLUS MINUS SLASH prog : VOID MAIN LPAREN RPAREN LCURL body RCURL\n\t\t\t | VOID MAIN LPAREN RPAREN LCURL RCURL\n\t body : stmt body\n\t\t\t | stmt\n\t stmt : decl SEMICOLON \n\t\t\t | assgn_list SEMICOLON\n\t assgn_list : assgn_list COMMA assgn \n\t\t\t  | assgn \n\t assgn : ptr_assgn\n\t \t\t  | num_assgn\n\t decl : INT decl_list\n\t decl_list : decl_list COMMA ID\n\t\t\t\t | decl_list COMMA ptr\n\t\t\t\t | ID\n\t\t\t\t | ptr\n\t ptr_assgn : ptr EQUALS ptr_expr  num_assgn : ID EQUALS ptr_expr\n\t\tptr_expr : ptr_expr PLUS ptr_factor \n\t\t\t\t | ptr_expr MINUS ptr_factor\n\t\t\t\t | ptr_factor\n\t\n\t\tptr_factor :  ptr_factor STAR ptr_term\n\t\t\t\t \t| ptr_factor SLASH ptr_term\n\t\t\t\t \t| ptr_term\n\t ptr_term :  MINUS ptr_term  \t\t%prec UMINUS\n\t\t\t\t  | ptr_expr_base\n\t ptr_expr_base : ID\n\t\t\t\t| NUM\n\t\t\t\t| ptr\n\t\t\t\t| addr\n\t\t\t\t| LPAREN ptr_expr RPAREN\n\t  ptr : STAR ptr \n\t\t\t | STAR ID\n\t\t\t | STAR addr\n\t addr : AND ID\n\t\t\t | AND ptr\n\t\t\t | AND addr\n\t'
    
_lr_action_items = {'AND':([8,20,24,29,37,40,51,52,53,54,],[20,20,20,20,20,20,20,20,20,20,]),'RPAREN':([4,21,22,23,33,34,35,36,38,39,41,42,44,45,49,50,57,58,59,60,61,],[5,-33,-31,-32,-36,-34,-35,-29,-25,-27,-20,-23,-28,-26,-24,57,-30,-21,-22,-19,-18,]),'SLASH':([21,22,23,33,34,35,36,38,39,41,42,44,45,49,57,58,59,60,61,],[-33,-31,-32,-36,-34,-35,-29,-25,-27,52,-23,-28,-26,-24,-30,-21,-22,52,52,]),'SEMICOLON':([7,10,13,14,18,21,22,23,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,49,55,56,57,58,59,60,61,],[19,-8,-10,27,-9,-33,-31,-32,-11,-15,-14,-36,-34,-35,-29,-25,-27,-20,-23,-16,-28,-26,-7,-17,-24,-13,-12,-30,-21,-22,-19,-18,]),'INT':([6,15,19,27,],[17,17,-5,-6,]),'VOID':([0,],[1,]),'RCURL':([6,12,15,19,27,28,],[11,25,-4,-5,-6,-3,]),'ID':([6,8,15,17,19,20,24,26,27,29,37,40,48,51,52,53,54,],[16,23,16,32,-5,34,45,16,-6,45,45,45,56,45,45,45,45,]),'EQUALS':([9,16,21,22,23,33,34,35,],[24,29,-33,-31,-32,-36,-34,-35,]),'NUM':([24,29,37,40,51,52,53,54,],[39,39,39,39,39,39,39,39,]),'COMMA':([10,13,14,18,21,22,23,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,49,55,56,57,58,59,60,61,],[-8,-10,26,-9,-33,-31,-32,48,-15,-14,-36,-34,-35,-29,-25,-27,-20,-23,-16,-28,-26,-7,-17,-24,-13,-12,-30,-21,-22,-19,-18,]),'LPAREN':([3,24,29,37,40,51,52,53,54,],[4,40,40,40,40,40,40,40,40,]),'PLUS':([21,22,23,33,34,35,36,38,39,41,42,43,44,45,47,49,50,57,58,59,60,61,],[-33,-31,-32,-36,-34,-35,-29,-25,-27,-20,-23,54,-28,-26,54,-24,54,-30,-21,-22,-19,-18,]),'STAR':([6,8,15,17,19,20,21,22,23,24,26,27,29,33,34,35,36,37,38,39,40,41,42,44,45,48,49,51,52,53,54,57,58,59,60,61,],[8,8,8,8,-5,8,-33,-31,-32,8,8,-6,8,-36,-34,-35,-29,8,-25,-27,8,51,-23,-28,-26,8,-24,8,8,8,8,-30,-21,-22,51,51,]),'MAIN':([1,],[3,]),'MINUS':([21,22,23,24,29,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,57,58,59,60,61,],[-33,-31,-32,37,37,-36,-34,-35,-29,37,-25,-27,37,-20,-23,53,-28,-26,53,-24,53,37,37,37,37,-30,-21,-22,-19,-18,]),'$end':([2,11,25,],[0,-2,-1,]),'LCURL':([5,],[6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([6,15,],[12,28,]),'decl':([6,15,],[7,7,]),'addr':([8,20,24,29,37,40,51,52,53,54,],[21,33,36,36,36,36,36,36,36,36,]),'assgn':([6,15,26,],[10,10,46,]),'num_assgn':([6,15,26,],[13,13,13,]),'ptr_assgn':([6,15,26,],[18,18,18,]),'assgn_list':([6,15,],[14,14,]),'stmt':([6,15,],[15,15,]),'ptr_term':([24,29,37,40,51,52,53,54,],[42,42,49,42,58,59,42,42,]),'ptr_expr_base':([24,29,37,40,51,52,53,54,],[38,38,38,38,38,38,38,38,]),'decl_list':([17,],[30,]),'prog':([0,],[2,]),'ptr_factor':([24,29,40,53,54,],[41,41,41,60,61,]),'ptr_expr':([24,29,40,],[43,47,50,]),'ptr':([6,8,15,17,20,24,26,29,37,40,48,51,52,53,54,],[9,22,9,31,35,44,9,44,44,44,55,44,44,44,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> VOID MAIN LPAREN RPAREN LCURL body RCURL','prog',7,'p_def_prog','Parser.py',122),
  ('prog -> VOID MAIN LPAREN RPAREN LCURL RCURL','prog',6,'p_def_prog','Parser.py',123),
  ('body -> stmt body','body',2,'p_def_body','Parser.py',129),
  ('body -> stmt','body',1,'p_def_body','Parser.py',130),
  ('stmt -> decl SEMICOLON','stmt',2,'p_def_stmt','Parser.py',136),
  ('stmt -> assgn_list SEMICOLON','stmt',2,'p_def_stmt','Parser.py',137),
  ('assgn_list -> assgn_list COMMA assgn','assgn_list',3,'p_def_assgn_list','Parser.py',143),
  ('assgn_list -> assgn','assgn_list',1,'p_def_assgn_list','Parser.py',144),
  ('assgn -> ptr_assgn','assgn',1,'p_def_assgn','Parser.py',150),
  ('assgn -> num_assgn','assgn',1,'p_def_assgn','Parser.py',151),
  ('decl -> INT decl_list','decl',2,'p_def_decl','Parser.py',157),
  ('decl_list -> decl_list COMMA ID','decl_list',3,'p_def_decl_list','Parser.py',163),
  ('decl_list -> decl_list COMMA ptr','decl_list',3,'p_def_decl_list','Parser.py',164),
  ('decl_list -> ID','decl_list',1,'p_def_decl_list','Parser.py',165),
  ('decl_list -> ptr','decl_list',1,'p_def_decl_list','Parser.py',166),
  ('ptr_assgn -> ptr EQUALS ptr_expr','ptr_assgn',3,'p_def_ptr_assgn','Parser.py',171),
  ('num_assgn -> ID EQUALS ptr_expr','num_assgn',3,'p_def_num_assgn','Parser.py',177),
  ('ptr_expr -> ptr_expr PLUS ptr_factor','ptr_expr',3,'p_def_ptr_expr','Parser.py',192),
  ('ptr_expr -> ptr_expr MINUS ptr_factor','ptr_expr',3,'p_def_ptr_expr','Parser.py',193),
  ('ptr_expr -> ptr_factor','ptr_expr',1,'p_def_ptr_expr','Parser.py',194),
  ('ptr_factor -> ptr_factor STAR ptr_term','ptr_factor',3,'p_def_ptr_factor','Parser.py',208),
  ('ptr_factor -> ptr_factor SLASH ptr_term','ptr_factor',3,'p_def_ptr_factor','Parser.py',209),
  ('ptr_factor -> ptr_term','ptr_factor',1,'p_def_ptr_factor','Parser.py',210),
  ('ptr_term -> MINUS ptr_term','ptr_term',2,'p_def_ptr_term','Parser.py',223),
  ('ptr_term -> ptr_expr_base','ptr_term',1,'p_def_ptr_term','Parser.py',224),
  ('ptr_expr_base -> ID','ptr_expr_base',1,'p_def_ptr_expr_base','Parser.py',233),
  ('ptr_expr_base -> NUM','ptr_expr_base',1,'p_def_ptr_expr_base','Parser.py',234),
  ('ptr_expr_base -> ptr','ptr_expr_base',1,'p_def_ptr_expr_base','Parser.py',235),
  ('ptr_expr_base -> addr','ptr_expr_base',1,'p_def_ptr_expr_base','Parser.py',236),
  ('ptr_expr_base -> LPAREN ptr_expr RPAREN','ptr_expr_base',3,'p_def_ptr_expr_base','Parser.py',237),
  ('ptr -> STAR ptr','ptr',2,'p_def_ptr','Parser.py',253),
  ('ptr -> STAR ID','ptr',2,'p_def_ptr','Parser.py',254),
  ('ptr -> STAR addr','ptr',2,'p_def_ptr','Parser.py',255),
  ('addr -> AND ID','addr',2,'p_def_addr','Parser.py',264),
  ('addr -> AND ptr','addr',2,'p_def_addr','Parser.py',265),
  ('addr -> AND addr','addr',2,'p_def_addr','Parser.py',266),
]
