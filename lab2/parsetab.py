
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID STAR AND NUM LPAREN RPAREN COMMA LCURL RCURL SEMICOLON EQUALS INT VOID MAIN prog : VOID MAIN LPAREN RPAREN LCURL body RCURL\n\t\t\t | VOID MAIN LPAREN RPAREN LCURL RCURL\n\t body : stmt body\n\t\t\t | stmt\n\t stmt : expr1 SEMICOLON \n\t\t\t | expr2 SEMICOLON\n\t expr2 : expr2 COMMA equality \n\t\t\t  | equality \n\t equality : equality1\n\t \t\t\t | equality2\n\t expr1 : INT subexpr1\n\t subexpr1 : subexpr1 COMMA ID\n\t\t\t\t | subexpr1 COMMA ptr\n\t\t\t\t | subexpr1 COMMA equality1\n\t\t\t\t | ID\n\t\t\t\t | ptr\n\t\t\t\t | equality1\n\t equality1 : ptr EQUALS ptrexpr  equality2 : ID EQUALS addr  ptrexpr : ptr EQUALS ptrexpr\n\t\t\t\t| NUM\n\t\t\t\t| ptr\n\t  ptr : STAR ID\n\t addr : AND ID\n\t'
    
_lr_action_items = {'AND':([26,],[35,]),'RPAREN':([4,],[5,]),'SEMICOLON':([10,11,15,17,18,19,27,28,29,30,31,32,33,34,36,39,40,41,42,43,],[22,23,-8,-9,-10,-23,-11,-16,-17,-15,-18,-22,-21,-7,-19,-24,-13,-14,-12,-20,]),'INT':([6,13,22,23,],[16,16,-6,-5,]),'VOID':([0,],[1,]),'RCURL':([6,12,13,22,23,25,],[9,24,-4,-6,-5,-3,]),'ID':([6,7,13,16,21,22,23,35,37,],[14,19,14,30,14,-6,-5,39,42,]),'EQUALS':([8,14,19,28,32,40,],[20,26,-23,20,38,20,]),'NUM':([20,38,],[33,33,]),'COMMA':([10,15,17,18,19,27,28,29,30,31,32,33,34,36,39,40,41,42,43,],[21,-8,-9,-10,-23,37,-16,-17,-15,-18,-22,-21,-7,-19,-24,-13,-14,-12,-20,]),'LPAREN':([3,],[4,]),'STAR':([6,13,16,20,21,22,23,37,38,],[7,7,7,7,7,-6,-5,7,7,]),'MAIN':([1,],[3,]),'$end':([2,9,24,],[0,-2,-1,]),'LCURL':([5,],[6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([6,13,],[12,25,]),'equality':([6,13,21,],[15,15,34,]),'addr':([26,],[36,]),'ptrexpr':([20,38,],[31,43,]),'subexpr1':([16,],[27,]),'stmt':([6,13,],[13,13,]),'expr2':([6,13,],[10,10,]),'expr1':([6,13,],[11,11,]),'prog':([0,],[2,]),'equality1':([6,13,16,21,37,],[17,17,29,17,41,]),'ptr':([6,13,16,20,21,37,38,],[8,8,28,32,8,40,32,]),'equality2':([6,13,21,],[18,18,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> VOID MAIN LPAREN RPAREN LCURL body RCURL','prog',7,'p_def_prog','lab2.py',62),
  ('prog -> VOID MAIN LPAREN RPAREN LCURL RCURL','prog',6,'p_def_prog','lab2.py',63),
  ('body -> stmt body','body',2,'p_def_body','lab2.py',70),
  ('body -> stmt','body',1,'p_def_body','lab2.py',71),
  ('stmt -> expr1 SEMICOLON','stmt',2,'p_def_stmt','lab2.py',76),
  ('stmt -> expr2 SEMICOLON','stmt',2,'p_def_stmt','lab2.py',77),
  ('expr2 -> expr2 COMMA equality','expr2',3,'p_def_expr2','lab2.py',82),
  ('expr2 -> equality','expr2',1,'p_def_expr2','lab2.py',83),
  ('equality -> equality1','equality',1,'p_def_equality','lab2.py',88),
  ('equality -> equality2','equality',1,'p_def_equality','lab2.py',89),
  ('expr1 -> INT subexpr1','expr1',2,'p_def_expr1','lab2.py',94),
  ('subexpr1 -> subexpr1 COMMA ID','subexpr1',3,'p_def_subexpr1','lab2.py',99),
  ('subexpr1 -> subexpr1 COMMA ptr','subexpr1',3,'p_def_subexpr1','lab2.py',100),
  ('subexpr1 -> subexpr1 COMMA equality1','subexpr1',3,'p_def_subexpr1','lab2.py',101),
  ('subexpr1 -> ID','subexpr1',1,'p_def_subexpr1','lab2.py',102),
  ('subexpr1 -> ptr','subexpr1',1,'p_def_subexpr1','lab2.py',103),
  ('subexpr1 -> equality1','subexpr1',1,'p_def_subexpr1','lab2.py',104),
  ('equality1 -> ptr EQUALS ptrexpr','equality1',3,'p_def_equality1','lab2.py',117),
  ('equality2 -> ID EQUALS addr','equality2',3,'p_def_equality2','lab2.py',124),
  ('ptrexpr -> ptr EQUALS ptrexpr','ptrexpr',3,'p_def_ptrexpr','lab2.py',130),
  ('ptrexpr -> NUM','ptrexpr',1,'p_def_ptrexpr','lab2.py',131),
  ('ptrexpr -> ptr','ptrexpr',1,'p_def_ptrexpr','lab2.py',132),
  ('ptr -> STAR ID','ptr',2,'p_def_ptr','lab2.py',143),
  ('addr -> AND ID','addr',2,'p_def_addr','lab2.py',149),
]
