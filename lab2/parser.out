Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> VOID MAIN LPAREN RPAREN LCURL body RCURL
Rule 2     prog -> VOID MAIN LPAREN RPAREN LCURL RCURL
Rule 3     body -> stmt body
Rule 4     body -> stmt
Rule 5     stmt -> decl SEMICOLON
Rule 6     stmt -> assgn_list SEMICOLON
Rule 7     assgn_list -> assgn_list COMMA assgn
Rule 8     assgn_list -> assgn
Rule 9     assgn -> ptr_assgn
Rule 10    assgn -> num_assgn
Rule 11    decl -> INT decl_list
Rule 12    decl_list -> decl_list COMMA ID
Rule 13    decl_list -> decl_list COMMA ptr
Rule 14    decl_list -> decl_list COMMA ptr_assgn
Rule 15    decl_list -> ID
Rule 16    decl_list -> ptr
Rule 17    decl_list -> ptr_assgn
Rule 18    ptr_assgn -> ptr EQUALS ptr_expr
Rule 19    num_assgn -> ID EQUALS num_assgn
Rule 20    num_assgn -> ID EQUALS addr
Rule 21    num_assgn -> ID EQUALS ID
Rule 22    ptr_expr -> ptr EQUALS ptr_expr
Rule 23    ptr_expr -> num_assgn
Rule 24    ptr_expr -> ID
Rule 25    ptr_expr -> NUM
Rule 26    ptr_expr -> ptr
Rule 27    ptr -> STAR ptr
Rule 28    ptr -> STAR ID
Rule 29    ptr -> STAR addr
Rule 30    addr -> AND ID
Rule 31    addr -> AND ptr

Terminals, with rules where they appear

AND                  : 30 31
COMMA                : 7 12 13 14
EQUALS               : 18 19 20 21 22
ID                   : 12 15 19 20 21 21 24 28 30
INT                  : 11
LCURL                : 1 2
LPAREN               : 1 2
MAIN                 : 1 2
NUM                  : 25
RCURL                : 1 2
RPAREN               : 1 2
SEMICOLON            : 5 6
STAR                 : 27 28 29
VOID                 : 1 2
error                : 

Nonterminals, with rules where they appear

addr                 : 20 29
assgn                : 7 8
assgn_list           : 6 7
body                 : 1 3
decl                 : 5
decl_list            : 11 12 13 14
num_assgn            : 10 19 23
prog                 : 0
ptr                  : 13 16 18 22 26 27 31
ptr_assgn            : 9 14 17
ptr_expr             : 18 22
stmt                 : 3 4

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . VOID MAIN LPAREN RPAREN LCURL body RCURL
    (2) prog -> . VOID MAIN LPAREN RPAREN LCURL RCURL

    VOID            shift and go to state 1

    prog                           shift and go to state 2

state 1

    (1) prog -> VOID . MAIN LPAREN RPAREN LCURL body RCURL
    (2) prog -> VOID . MAIN LPAREN RPAREN LCURL RCURL

    MAIN            shift and go to state 3


state 2

    (0) S' -> prog .



state 3

    (1) prog -> VOID MAIN . LPAREN RPAREN LCURL body RCURL
    (2) prog -> VOID MAIN . LPAREN RPAREN LCURL RCURL

    LPAREN          shift and go to state 4


state 4

    (1) prog -> VOID MAIN LPAREN . RPAREN LCURL body RCURL
    (2) prog -> VOID MAIN LPAREN . RPAREN LCURL RCURL

    RPAREN          shift and go to state 5


state 5

    (1) prog -> VOID MAIN LPAREN RPAREN . LCURL body RCURL
    (2) prog -> VOID MAIN LPAREN RPAREN . LCURL RCURL

    LCURL           shift and go to state 6


state 6

    (1) prog -> VOID MAIN LPAREN RPAREN LCURL . body RCURL
    (2) prog -> VOID MAIN LPAREN RPAREN LCURL . RCURL
    (3) body -> . stmt body
    (4) body -> . stmt
    (5) stmt -> . decl SEMICOLON
    (6) stmt -> . assgn_list SEMICOLON
    (11) decl -> . INT decl_list
    (7) assgn_list -> . assgn_list COMMA assgn
    (8) assgn_list -> . assgn
    (9) assgn -> . ptr_assgn
    (10) assgn -> . num_assgn
    (18) ptr_assgn -> . ptr EQUALS ptr_expr
    (19) num_assgn -> . ID EQUALS num_assgn
    (20) num_assgn -> . ID EQUALS addr
    (21) num_assgn -> . ID EQUALS ID
    (27) ptr -> . STAR ptr
    (28) ptr -> . STAR ID
    (29) ptr -> . STAR addr

    RCURL           shift and go to state 12
    INT             shift and go to state 7
    ID              shift and go to state 10
    STAR            shift and go to state 8

    assgn                          shift and go to state 11
    decl                           shift and go to state 9
    assgn_list                     shift and go to state 16
    num_assgn                      shift and go to state 17
    stmt                           shift and go to state 18
    ptr                            shift and go to state 13
    body                           shift and go to state 14
    ptr_assgn                      shift and go to state 15

state 7

    (11) decl -> INT . decl_list
    (12) decl_list -> . decl_list COMMA ID
    (13) decl_list -> . decl_list COMMA ptr
    (14) decl_list -> . decl_list COMMA ptr_assgn
    (15) decl_list -> . ID
    (16) decl_list -> . ptr
    (17) decl_list -> . ptr_assgn
    (27) ptr -> . STAR ptr
    (28) ptr -> . STAR ID
    (29) ptr -> . STAR addr
    (18) ptr_assgn -> . ptr EQUALS ptr_expr

    ID              shift and go to state 22
    STAR            shift and go to state 8

    ptr                            shift and go to state 21
    decl_list                      shift and go to state 20
    ptr_assgn                      shift and go to state 19

state 8

    (27) ptr -> STAR . ptr
    (28) ptr -> STAR . ID
    (29) ptr -> STAR . addr
    (27) ptr -> . STAR ptr
    (28) ptr -> . STAR ID
    (29) ptr -> . STAR addr
    (30) addr -> . AND ID
    (31) addr -> . AND ptr

    ID              shift and go to state 26
    STAR            shift and go to state 8
    AND             shift and go to state 24

    ptr                            shift and go to state 23
    addr                           shift and go to state 25

state 9

    (5) stmt -> decl . SEMICOLON

    SEMICOLON       shift and go to state 27


state 10

    (19) num_assgn -> ID . EQUALS num_assgn
    (20) num_assgn -> ID . EQUALS addr
    (21) num_assgn -> ID . EQUALS ID

    EQUALS          shift and go to state 28


state 11

    (8) assgn_list -> assgn .

    SEMICOLON       reduce using rule 8 (assgn_list -> assgn .)
    COMMA           reduce using rule 8 (assgn_list -> assgn .)


state 12

    (2) prog -> VOID MAIN LPAREN RPAREN LCURL RCURL .

    $end            reduce using rule 2 (prog -> VOID MAIN LPAREN RPAREN LCURL RCURL .)


state 13

    (18) ptr_assgn -> ptr . EQUALS ptr_expr

    EQUALS          shift and go to state 29


state 14

    (1) prog -> VOID MAIN LPAREN RPAREN LCURL body . RCURL

    RCURL           shift and go to state 30


state 15

    (9) assgn -> ptr_assgn .

    SEMICOLON       reduce using rule 9 (assgn -> ptr_assgn .)
    COMMA           reduce using rule 9 (assgn -> ptr_assgn .)


state 16

    (6) stmt -> assgn_list . SEMICOLON
    (7) assgn_list -> assgn_list . COMMA assgn

    SEMICOLON       shift and go to state 31
    COMMA           shift and go to state 32


state 17

    (10) assgn -> num_assgn .

    SEMICOLON       reduce using rule 10 (assgn -> num_assgn .)
    COMMA           reduce using rule 10 (assgn -> num_assgn .)


state 18

    (3) body -> stmt . body
    (4) body -> stmt .
    (3) body -> . stmt body
    (4) body -> . stmt
    (5) stmt -> . decl SEMICOLON
    (6) stmt -> . assgn_list SEMICOLON
    (11) decl -> . INT decl_list
    (7) assgn_list -> . assgn_list COMMA assgn
    (8) assgn_list -> . assgn
    (9) assgn -> . ptr_assgn
    (10) assgn -> . num_assgn
    (18) ptr_assgn -> . ptr EQUALS ptr_expr
    (19) num_assgn -> . ID EQUALS num_assgn
    (20) num_assgn -> . ID EQUALS addr
    (21) num_assgn -> . ID EQUALS ID
    (27) ptr -> . STAR ptr
    (28) ptr -> . STAR ID
    (29) ptr -> . STAR addr

    RCURL           reduce using rule 4 (body -> stmt .)
    INT             shift and go to state 7
    ID              shift and go to state 10
    STAR            shift and go to state 8

    assgn                          shift and go to state 11
    decl                           shift and go to state 9
    assgn_list                     shift and go to state 16
    num_assgn                      shift and go to state 17
    stmt                           shift and go to state 18
    ptr                            shift and go to state 13
    body                           shift and go to state 33
    ptr_assgn                      shift and go to state 15

state 19

    (17) decl_list -> ptr_assgn .

    COMMA           reduce using rule 17 (decl_list -> ptr_assgn .)
    SEMICOLON       reduce using rule 17 (decl_list -> ptr_assgn .)


state 20

    (11) decl -> INT decl_list .
    (12) decl_list -> decl_list . COMMA ID
    (13) decl_list -> decl_list . COMMA ptr
    (14) decl_list -> decl_list . COMMA ptr_assgn

    SEMICOLON       reduce using rule 11 (decl -> INT decl_list .)
    COMMA           shift and go to state 34


state 21

    (16) decl_list -> ptr .
    (18) ptr_assgn -> ptr . EQUALS ptr_expr

    COMMA           reduce using rule 16 (decl_list -> ptr .)
    SEMICOLON       reduce using rule 16 (decl_list -> ptr .)
    EQUALS          shift and go to state 29


state 22

    (15) decl_list -> ID .

    COMMA           reduce using rule 15 (decl_list -> ID .)
    SEMICOLON       reduce using rule 15 (decl_list -> ID .)


state 23

    (27) ptr -> STAR ptr .

    EQUALS          reduce using rule 27 (ptr -> STAR ptr .)
    SEMICOLON       reduce using rule 27 (ptr -> STAR ptr .)
    COMMA           reduce using rule 27 (ptr -> STAR ptr .)


state 24

    (30) addr -> AND . ID
    (31) addr -> AND . ptr
    (27) ptr -> . STAR ptr
    (28) ptr -> . STAR ID
    (29) ptr -> . STAR addr

    ID              shift and go to state 36
    STAR            shift and go to state 8

    ptr                            shift and go to state 35

state 25

    (29) ptr -> STAR addr .

    EQUALS          reduce using rule 29 (ptr -> STAR addr .)
    SEMICOLON       reduce using rule 29 (ptr -> STAR addr .)
    COMMA           reduce using rule 29 (ptr -> STAR addr .)


state 26

    (28) ptr -> STAR ID .

    EQUALS          reduce using rule 28 (ptr -> STAR ID .)
    SEMICOLON       reduce using rule 28 (ptr -> STAR ID .)
    COMMA           reduce using rule 28 (ptr -> STAR ID .)


state 27

    (5) stmt -> decl SEMICOLON .

    INT             reduce using rule 5 (stmt -> decl SEMICOLON .)
    ID              reduce using rule 5 (stmt -> decl SEMICOLON .)
    STAR            reduce using rule 5 (stmt -> decl SEMICOLON .)
    RCURL           reduce using rule 5 (stmt -> decl SEMICOLON .)


state 28

    (19) num_assgn -> ID EQUALS . num_assgn
    (20) num_assgn -> ID EQUALS . addr
    (21) num_assgn -> ID EQUALS . ID
    (19) num_assgn -> . ID EQUALS num_assgn
    (20) num_assgn -> . ID EQUALS addr
    (21) num_assgn -> . ID EQUALS ID
    (30) addr -> . AND ID
    (31) addr -> . AND ptr

    ID              shift and go to state 39
    AND             shift and go to state 24

    addr                           shift and go to state 38
    num_assgn                      shift and go to state 37

state 29

    (18) ptr_assgn -> ptr EQUALS . ptr_expr
    (22) ptr_expr -> . ptr EQUALS ptr_expr
    (23) ptr_expr -> . num_assgn
    (24) ptr_expr -> . ID
    (25) ptr_expr -> . NUM
    (26) ptr_expr -> . ptr
    (27) ptr -> . STAR ptr
    (28) ptr -> . STAR ID
    (29) ptr -> . STAR addr
    (19) num_assgn -> . ID EQUALS num_assgn
    (20) num_assgn -> . ID EQUALS addr
    (21) num_assgn -> . ID EQUALS ID

    ID              shift and go to state 44
    NUM             shift and go to state 42
    STAR            shift and go to state 8

    ptr                            shift and go to state 41
    ptr_expr                       shift and go to state 43
    num_assgn                      shift and go to state 40

state 30

    (1) prog -> VOID MAIN LPAREN RPAREN LCURL body RCURL .

    $end            reduce using rule 1 (prog -> VOID MAIN LPAREN RPAREN LCURL body RCURL .)


state 31

    (6) stmt -> assgn_list SEMICOLON .

    INT             reduce using rule 6 (stmt -> assgn_list SEMICOLON .)
    ID              reduce using rule 6 (stmt -> assgn_list SEMICOLON .)
    STAR            reduce using rule 6 (stmt -> assgn_list SEMICOLON .)
    RCURL           reduce using rule 6 (stmt -> assgn_list SEMICOLON .)


state 32

    (7) assgn_list -> assgn_list COMMA . assgn
    (9) assgn -> . ptr_assgn
    (10) assgn -> . num_assgn
    (18) ptr_assgn -> . ptr EQUALS ptr_expr
    (19) num_assgn -> . ID EQUALS num_assgn
    (20) num_assgn -> . ID EQUALS addr
    (21) num_assgn -> . ID EQUALS ID
    (27) ptr -> . STAR ptr
    (28) ptr -> . STAR ID
    (29) ptr -> . STAR addr

    ID              shift and go to state 10
    STAR            shift and go to state 8

    assgn                          shift and go to state 45
    num_assgn                      shift and go to state 17
    ptr                            shift and go to state 13
    ptr_assgn                      shift and go to state 15

state 33

    (3) body -> stmt body .

    RCURL           reduce using rule 3 (body -> stmt body .)


state 34

    (12) decl_list -> decl_list COMMA . ID
    (13) decl_list -> decl_list COMMA . ptr
    (14) decl_list -> decl_list COMMA . ptr_assgn
    (27) ptr -> . STAR ptr
    (28) ptr -> . STAR ID
    (29) ptr -> . STAR addr
    (18) ptr_assgn -> . ptr EQUALS ptr_expr

    ID              shift and go to state 46
    STAR            shift and go to state 8

    ptr                            shift and go to state 47
    ptr_assgn                      shift and go to state 48

state 35

    (31) addr -> AND ptr .

    EQUALS          reduce using rule 31 (addr -> AND ptr .)
    COMMA           reduce using rule 31 (addr -> AND ptr .)
    SEMICOLON       reduce using rule 31 (addr -> AND ptr .)


state 36

    (30) addr -> AND ID .

    EQUALS          reduce using rule 30 (addr -> AND ID .)
    COMMA           reduce using rule 30 (addr -> AND ID .)
    SEMICOLON       reduce using rule 30 (addr -> AND ID .)


state 37

    (19) num_assgn -> ID EQUALS num_assgn .

    SEMICOLON       reduce using rule 19 (num_assgn -> ID EQUALS num_assgn .)
    COMMA           reduce using rule 19 (num_assgn -> ID EQUALS num_assgn .)


state 38

    (20) num_assgn -> ID EQUALS addr .

    SEMICOLON       reduce using rule 20 (num_assgn -> ID EQUALS addr .)
    COMMA           reduce using rule 20 (num_assgn -> ID EQUALS addr .)


state 39

    (21) num_assgn -> ID EQUALS ID .
    (19) num_assgn -> ID . EQUALS num_assgn
    (20) num_assgn -> ID . EQUALS addr
    (21) num_assgn -> ID . EQUALS ID

    SEMICOLON       reduce using rule 21 (num_assgn -> ID EQUALS ID .)
    COMMA           reduce using rule 21 (num_assgn -> ID EQUALS ID .)
    EQUALS          shift and go to state 28


state 40

    (23) ptr_expr -> num_assgn .

    SEMICOLON       reduce using rule 23 (ptr_expr -> num_assgn .)
    COMMA           reduce using rule 23 (ptr_expr -> num_assgn .)


state 41

    (22) ptr_expr -> ptr . EQUALS ptr_expr
    (26) ptr_expr -> ptr .

    EQUALS          shift and go to state 49
    SEMICOLON       reduce using rule 26 (ptr_expr -> ptr .)
    COMMA           reduce using rule 26 (ptr_expr -> ptr .)


state 42

    (25) ptr_expr -> NUM .

    SEMICOLON       reduce using rule 25 (ptr_expr -> NUM .)
    COMMA           reduce using rule 25 (ptr_expr -> NUM .)


state 43

    (18) ptr_assgn -> ptr EQUALS ptr_expr .

    SEMICOLON       reduce using rule 18 (ptr_assgn -> ptr EQUALS ptr_expr .)
    COMMA           reduce using rule 18 (ptr_assgn -> ptr EQUALS ptr_expr .)


state 44

    (24) ptr_expr -> ID .
    (19) num_assgn -> ID . EQUALS num_assgn
    (20) num_assgn -> ID . EQUALS addr
    (21) num_assgn -> ID . EQUALS ID

    SEMICOLON       reduce using rule 24 (ptr_expr -> ID .)
    COMMA           reduce using rule 24 (ptr_expr -> ID .)
    EQUALS          shift and go to state 28


state 45

    (7) assgn_list -> assgn_list COMMA assgn .

    SEMICOLON       reduce using rule 7 (assgn_list -> assgn_list COMMA assgn .)
    COMMA           reduce using rule 7 (assgn_list -> assgn_list COMMA assgn .)


state 46

    (12) decl_list -> decl_list COMMA ID .

    COMMA           reduce using rule 12 (decl_list -> decl_list COMMA ID .)
    SEMICOLON       reduce using rule 12 (decl_list -> decl_list COMMA ID .)


state 47

    (13) decl_list -> decl_list COMMA ptr .
    (18) ptr_assgn -> ptr . EQUALS ptr_expr

    COMMA           reduce using rule 13 (decl_list -> decl_list COMMA ptr .)
    SEMICOLON       reduce using rule 13 (decl_list -> decl_list COMMA ptr .)
    EQUALS          shift and go to state 29


state 48

    (14) decl_list -> decl_list COMMA ptr_assgn .

    COMMA           reduce using rule 14 (decl_list -> decl_list COMMA ptr_assgn .)
    SEMICOLON       reduce using rule 14 (decl_list -> decl_list COMMA ptr_assgn .)


state 49

    (22) ptr_expr -> ptr EQUALS . ptr_expr
    (22) ptr_expr -> . ptr EQUALS ptr_expr
    (23) ptr_expr -> . num_assgn
    (24) ptr_expr -> . ID
    (25) ptr_expr -> . NUM
    (26) ptr_expr -> . ptr
    (27) ptr -> . STAR ptr
    (28) ptr -> . STAR ID
    (29) ptr -> . STAR addr
    (19) num_assgn -> . ID EQUALS num_assgn
    (20) num_assgn -> . ID EQUALS addr
    (21) num_assgn -> . ID EQUALS ID

    ID              shift and go to state 44
    NUM             shift and go to state 42
    STAR            shift and go to state 8

    ptr                            shift and go to state 41
    ptr_expr                       shift and go to state 50
    num_assgn                      shift and go to state 40

state 50

    (22) ptr_expr -> ptr EQUALS ptr_expr .

    SEMICOLON       reduce using rule 22 (ptr_expr -> ptr EQUALS ptr_expr .)
    COMMA           reduce using rule 22 (ptr_expr -> ptr EQUALS ptr_expr .)

